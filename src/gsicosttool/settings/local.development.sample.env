# Django project configuration, if environ vars are missing
#
#   This is a sample file. Rename to local.development.env for a quick development
#   settings. Git will not track local.development.env as it contains confidential
#   information. So store a backup of this file outside this repo.
#
# Note: No spaces around '=' sign and no quotes for righthand values.

DEBUG=True

# syntax: DATABASE_URL=postgres://username:password@127.0.0.1:5432/database

# Sample Django database settings for PostgreSQL (requires package psycopg2)
#		DATABASES = {
#			'default': {
#		       'ENGINE': 'django.db.backends.postgresql',
#		       'NAME': '{DATABASENAME}',
#		       'USER': '{USER}',
#		       'PASSWORD': '{PASSWORD}',
#		       'HOST': '127.0.0.1',
#		       'PORT': '{PORT}',
#		       'DATABASE_SCHEMA': 'pubic'
#			}
#		}
# PostgreSQL
DATABASE_URL=postgres://{USER}:{PASSWORD}@127.0.0.1:{PORT}/{DATABASENAME}

# Sample Django database settings for Microsoft SQL Server (requires package pyodbc)
#		DATABASES = {
#			'default': {
#				'ENGINE': 'sql_server.pyodbc',
#				'NAME': '{DATABASENAME}',
#				'USER': '{USER}',
#				'PASSWORD': '{PASSWORD}',
#				'HOST': '{MACHINE_NAME}',
#				'PORT': '',
#		        'OPTIONS': {
#		            'driver': 'ODBC Driver 13 for SQL Server',
#		        },
#			}
#		}
# SQL Server
# DATABASE_URL=mssql://{USER}:{PASSWORD}@{MACHINENAME}:{PORT}/{DATABASENAME}

# Command to create a new secret key:
# PROMPT> python.exe -c "import random; import string; print(''.join([random.SystemRandom().choice(string.digits + string.ascii_letters + string.punctuation) for i in range(100)]))"

SECRET_KEY=mEbH!;[(x^.Fq-r)-ieYnfY^RN9(KC_Wix'W(Dk@82dX_,aA#59W7dqg*)zb.?~Fn>!Gu0g_1|b<'[k';OV#i&9Bu0Zh%~giZWS"

ALLOWED_HOSTS=127.0.0.1,localhost

TIME_ZONE='US/Central'

IS_TESTING_INSTANCE='true'
